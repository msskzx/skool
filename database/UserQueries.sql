-- “As a system user (registered, or not registered), I should be able to ...”
--
-- 1 Search for any school by its name, address or its type (national/international).
--
-- delimiter //
-- create procedure searchSchools
-- (in input varchar(255))
-- BEGIN
-- select sc.* from schools sc
-- where sc.name like concat('%', input, '%') COLLATE utf8_unicode_ci or sc.address like concat('%', input,'%') COLLATE utf8_unicode_ci or sc.type = input COLLATE utf8_unicode_ci;
-- end //
-- delimiter ;
--
--
--
-- 2 View a list of all available schools on the system categorized by their level.
--
-- delimiter //
-- create procedure getElementaryLevels()
-- BEGIN
-- select sc.*
-- from schools sc inner join elementary_levels el
-- on sc.id = el.id;
-- end //
-- delimiter ;
--
-- delimiter //
-- create procedure getMiddleLevels()
-- BEGIN
-- select sc.*
-- from schools sc inner join middle_levels ml
-- on sc.id = ml.id;
-- end //
-- delimiter ;
--
-- delimiter //
-- create procedure getHighLevels()
-- BEGIN
-- select sc.*
-- from schools sc inner join high_levels hl
-- on sc.id = hl.id;
-- end //
-- delimiter ;
--
--
--
-- 3 View the information of a certain school along with the reviews written about it and teachers
-- teaching in this school
--
-- delimiter //
-- create procedure getSchoolReviews
-- (in school_id int)
-- BEGIN
--
-- select prs.*
-- from schools sc inner join parent_reviews_school prs
-- on sc.id = prs.school_id and sc.id = school_id;
--
-- end //
-- delimiter ;
--
-- delimiter //
-- create procedure getSchoolTeachers
-- (in school_id int)
-- BEGIN
--
-- select e.*, t.years_of_exp
-- from schools sc inner join employees e
-- on sc.id = e.school_id
-- inner join teachers t
-- on e.id = t.id and sc.id = school_id;
--
-- end //
-- delimiter ;
